{"is_source_file": true, "format": "Dart", "description": "This file defines abstract interfaces for Firebase API integrations (REST and real-time), along with a mock implementation for development purposes. It includes method signatures for fetching, creating, updating, deleting various entities like events, birthdays, users, and messages, as well as subscribing to real-time updates.", "external_files": ["../models/event.dart", "../models/birthday.dart", "../models/message.dart", "../models/user.dart"], "external_methods": [], "published": ["FirebaseRestApi", "FirebaseRealtimeApi", "MockFirebaseApi"], "classes": [{"name": "FirebaseRestApi", "description": "Abstract class defining REST API methods for Firebase operations such as fetching, creating, updating, and deleting events, birthdays, users, and messages."}, {"name": "FirebaseRealtimeApi", "description": "Abstract class defining real-time Firebase API methods using streams for subscribing to message, event, and birthday updates."}, {"name": "MockFirebaseApi", "description": "A mock implementation of both FirebaseRestApi and FirebaseRealtimeApi, used for development and CI, with in-memory storage and stream controllers to simulate Firebase behavior."}], "methods": [{"name": "fetchEvents", "description": "Fetches a list of events created by the specified user."}, {"name": "createEvent", "description": "Creates a new event entry."}, {"name": "updateEvent", "description": "Updates an existing event."}, {"name": "deleteEvent", "description": "Deletes an event by its ID."}, {"name": "fetchBirthdays", "description": "Fetches a list of birthdays, optionally sorted by date."}, {"name": "createBirthday", "description": "Creates a new birthday entry."}, {"name": "updateBirthday", "description": "Updates an existing birthday."}, {"name": "deleteBirthday", "description": "Deletes a birthday by its ID."}, {"name": "fetchUser", "description": "Retrieves user details by user ID."}, {"name": "updateUser", "description": "Updates user information."}, {"name": "fetchMessages", "description": "Fetches messages from a conversation, with optional filtering by timestamp."}, {"name": "sendMessage", "description": "Sends a chat message and adds it to the conversation."}, {"name": "subscribeMessages", "description": "Subscribes to real-time message updates in a conversation."}, {"name": "subscribeEvents", "description": "Subscribes to real-time event updates for a user."}, {"name": "subscribeBirthdays", "description": "Subscribes to real-time birthday updates for a user."}], "calls": ["StreamController.add", "Future.microtask", "Map.putIfAbsent", "StreamController.close"], "search-terms": ["FirebaseApi", "MockFirebase", "REST", "Realtime", "stream", "subscribe", "mock implementation", "entity management", "in-memory store"], "state": 2, "file_id": 23, "knowledge_revision": 55, "git_revision": "", "hash": "e9970f583fa889634477894b43f6c47e", "format-version": 4, "code-base-name": "event_manager_frontend", "filename": "event_manager_frontend/lib/src/networking/firebase_api.dart", "revision_history": [{"55": ""}]}