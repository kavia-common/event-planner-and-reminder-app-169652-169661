{"is_source_file": true, "format": "Dart", "description": "This file defines abstract interfaces for Firebase integration, encompassing REST API and real-time API with Firebase RTDB/Firestore snapshots, as well as a mock implementation for development and testing purposes. The classes include method signatures for fetching, creating, updating, deleting data, and subscribing to real-time streams related to events, birthdays, messaging, and user information.", "external_files": ["../models/event.dart", "../models/birthday.dart", "../models/message.dart", "../models/user.dart"], "external_methods": [], "published": ["FirebaseRestApi", "FirebaseRealtimeApi", "MockFirebaseApi"], "classes": [{"name": "FirebaseRestApi", "description": "Abstract class defining REST API methods for Firebase operations such as fetching, creating, updating, and deleting events, birthdays, user info, and messages."}, {"name": "FirebaseRealtimeApi", "description": "Abstract class defining real-time streaming capabilities for Firebase data such as messages, events, and birthdays."}, {"name": "MockFirebaseApi", "description": "A mock implementation of FirebaseRestApi and FirebaseRealtimeApi for development and testing, simulating data storage and stream updates."}], "methods": [{"name": "fetchEvents", "description": "Fetches a list of events for a specified user ID."}, {"name": "createEvent", "description": "Creates a new event."}, {"name": "updateEvent", "description": "Updates an existing event."}, {"name": "deleteEvent", "description": "Deletes an event by ID."}, {"name": "fetchBirthdays", "description": "Fetches a list of birthdays for a specified user ID."}, {"name": "createBirthday", "description": "Creates a new birthday entry."}, {"name": "updateBirthday", "description": "Updates an existing birthday."}, {"name": "deleteBirthday", "description": "Deletes a birthday by ID."}, {"name": "fetchUser", "description": "Fetches user information by user ID."}, {"name": "updateUser", "description": "Updates user information."}, {"name": "fetchMessages", "description": "Fetches messages from a conversation, optionally since a specific date."}, {"name": "sendMessage", "description": "Sends a chat message."}, {"name": "subscribeMessages", "description": "Subscribes to real-time message updates for a conversation."}, {"name": "subscribeEvents", "description": "Subscribes to real-time event updates for a user."}, {"name": "subscribeBirthdays", "description": "Subscribes to real-time birthday updates for a user."}], "calls": ["Future<List<Event>> fetchEvents(String userId)", "Future<Event> createEvent(Event event)", "Future<Event> updateEvent(Event event)", "Future<void> deleteEvent(String eventId)", "Future<List<Birthday>> fetchBirthdays(String userId)", "Future<Birthday> createBirthday(Birthday birthday)", "Future<Birthday> updateBirthday(Birthday birthday)", "Future<void> deleteBirthday(String birthdayId)", "Future<AppUser> fetchUser(String userId)", "Future<AppUser> updateUser(AppUser user)", "Future<List<ChatMessage>> fetchMessages(String conversationId, {DateTime? since})", "Future<ChatMessage> sendMessage(ChatMessage message)", "Stream<List<ChatMessage>> subscribeMessages(String conversationId)", "Stream<List<Event>> subscribeEvents(String userId)", "Stream<List<Birthday>> subscribeBirthdays(String userId)"], "search-terms": ["Firebase API", "firebase mock implementation", "Firebase real-time streams", "Firebase REST interface", "ChatMessage", "Birthday", "Event", "user data", "mock Firebase prototype"], "state": 2, "file_id": 23, "knowledge_revision": 111, "git_revision": "", "revision_history": [{"55": ""}, {"111": ""}], "hash": "13407e55feaafe4f045cc0b4beebf824", "format-version": 4, "code-base-name": "event_manager_frontend", "filename": "event_manager_frontend/lib/src/networking/firebase_api.dart"}