{"is_source_file": true, "format": "Dart", "description": "This file defines the MessagesService class, which provides methods to send and watch messages within a conversation, backed by Firestore. It interacts with Firebase and the Message model to facilitate messaging features in an event planner app.", "external_files": ["../features/common/models.dart", "firebase_service.dart"], "external_methods": ["FirebaseService.isInitialized", "Message.toJson", "Message.fromJson"], "published": ["MessagesService"], "classes": [{"name": "MessagesService", "description": "A service class for handling messaging operations, such as sending messages and observing message streams, using Firestore as the backend."}], "methods": [{"name": "sendMessage", "description": "Sends a message to the specified conversation by storing it in Firestore. No operation if Firebase is not initialized."}, {"name": "watchMessages", "description": "Returns a stream of messages from a conversation, ordered by sent time. Emits an empty stream if Firebase is not initialized."}], "calls": ["FirebaseFirestore.instance.collection", "CollectionReference.doc", "CollectionReference.set", "CollectionReference.orderBy", "Query.snapshots", "Stream.map", "Message.fromJson"], "search-terms": ["MessagesService", "sendMessage", "watchMessages", "Firestore", "Conversation", "messages"], "state": 2, "file_id": 65, "knowledge_revision": 183, "git_revision": "", "revision_history": [{"177": ""}, {"183": ""}], "hash": "7a16147d1316c38c71838d157ecec225", "format-version": 4, "code-base-name": "event_manager_frontend", "filename": "event_manager_frontend/lib/services/messages_service.dart"}