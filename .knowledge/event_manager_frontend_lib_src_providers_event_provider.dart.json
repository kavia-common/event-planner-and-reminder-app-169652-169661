{"is_source_file": true, "format": "Dart", "description": "This file defines the EventProvider class in a Flutter app, acting as a state management provider for Event objects. It handles fetching, adding, updating, and deleting events, subscribing to event updates, and scheduling notifications for upcoming events.", "external_files": ["../models/event.dart", "../networking/firebase_api.dart", "../repositories/event_repository.dart", "../services/notification_service.dart"], "external_methods": ["MockFirebaseApi()", "EventRepository.restApi", "EventRepository.realtime", "NotificationService.instance.scheduleNotification", "notifyListeners"], "published": ["events", "addEvent", "updateEvent", "deleteEvent"], "classes": [{"name": "EventProvider", "description": "A ChangeNotifier that manages event data, subscriptions, and notifications for the app."}], "methods": [{"name": "_bootstrap", "description": "Initializes event list and sets up subscription to event updates."}, {"name": "addEvent", "description": "Creates a new event and schedules a notification if reminder is set."}, {"name": "updateEvent", "description": "Updates an existing event."}, {"name": "deleteEvent", "description": "Deletes an event by its ID."}], "calls": ["EventRepository.list", "EventRepository.subscribe", "EventRepository.create", "EventRepository.update", "EventRepository.delete", "NotificationService.instance.scheduleNotification", "notifyListeners"], "search-terms": ["EventProvider", "flutter ChangeNotifier", "event management", "notification scheduling", "event subscription", "firebase_api.dart", "event_repository.dart"], "state": 2, "file_id": 27, "knowledge_revision": 59, "git_revision": "", "hash": "528b0b853d5369e47ff3a6a83a572c1e", "format-version": 4, "code-base-name": "event_manager_frontend", "filename": "event_manager_frontend/lib/src/providers/event_provider.dart", "revision_history": [{"59": ""}]}